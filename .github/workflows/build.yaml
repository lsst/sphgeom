name: build_and_test

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          # Need to clone everything to determine version from git.
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "setup.cfg"
          allow-prereleases: true

      - name: Build and install
        run: |
          python -m pip install --upgrade pip setuptools uv
          uv pip install --system .[yaml,test]

      - name: Run tests
        run: pytest -r a -v

  pypi_sdist_build:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "setup.cfg"

      - name: Install dependencies
        run: |
          pip install --upgrade setuptools wheel build

      - name: Build and create distribution
        run: |
            python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sphgeom-sdist
          path: dist/*

  check-changes:
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if weekly changed
        id: check
        run: |
          # Get SHA hashes for all weekly tags
          weekly_sha=$(git tag -l 'w.*' | while read tag; do
            git rev-list -n 1 "${tag}"
          done)
          echo "Weekly tag SHA ${weekly_sha}"
          # Extract the current tag and its SHA
          current_tag=${GITHUB_REF#refs/tags/}
          echo "Current tag: ${current_tag}"
          current_sha=$(git rev-list -1 "${current_tag}") || echo "no_value"
          echo "Current sha: ${current_sha}"
          # Count occurrences of the current SHA in the weekly SHA list
          n=$(echo "${weekly_sha}" | grep -c "${current_sha}") || echo "0"
          echo "Current tag ${current_tag} (${current_sha}) SHA found ${n} time(s)"

          # Determine whether to skip the upload based on the count
          if [ "${n}" -gt 1 ]; then
            echo "Skip upload"
            echo "skip=true" >> "${GITHUB_OUTPUT}"
          else
            echo "Enable upload"
            echo "skip=false" >> "${GITHUB_OUTPUT}"
          fi

  pypi_wheel_build:
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["310", "311", "312", "313"]
    runs-on: ${{ matrix.os }}
    needs: [build_and_test]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      CIBW_BUILD: "cp${{ matrix.python-version }}-{manylinux_x86_64,manylinux_aarch64,macosx_arm64,macosx_x86_64}"
      CIBW_ARCHS_MACOS: "x86_64 arm64"
      CIBW_ARCHS_LINUX: "auto aarch64"

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: runner.os == 'Linux'
        with:
          platforms: arm64

      - uses: actions/checkout@v4
        with:
          # Need to clone everything to embed the versiona
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install --upgrade setuptools wheel cibuildwheel

      - name: Build and create distribution
        run: |
          python -m cibuildwheel --output-dir dist
      - uses: actions/upload-artifact@v4
        with:
          name: sphgeom-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*

  pipy_upload:
    needs: [pypi_sdist_build, pypi_wheel_build, check-changes]
    if: "${{ ! startsWith(github.ref, 'refs/tags/w.') || needs.check-changes.outputs.skip == 'false' }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: sphgeom-*
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_UPLOADS }}
